1
00:00:02,000 --> 00:00:06,000
‫در این قسمت با نحوهٔ نوشتن تست برای کدهای انگولار آشنا خواهیم شد.

2
00:00:06,000 --> 00:00:12,000
‫در انگولار، تست‌هایمان را با Karma می‌نویسیم. بدون آن می‌توانیم اینکار
‫را انجام دهیم،

3
00:00:12,000 --> 00:00:16,000
‫ولی این ابزار واقعاً برای اینکار عالی است

4
00:00:16,000 --> 00:00:18,000
‫اگر با نحوه نوشتن تست با ابزارهای دیگر علاقمند هستید،

5
00:00:18,000 --> 00:00:22,000
‫می‌توانید به دوره Testing JavaScript من مراجعه کنید.

6
00:00:22,000 --> 00:00:27,000
‫که سه کتابخانه اصلی: Jasmine، QUnit و Mocha آموزش داده شده است.

7
00:00:27,000 --> 00:00:31,000
‫انگولار در حالت پیش‌فرض از Jasmine استفاده می‌کند، اگرچه می‌توانید از هر کتابخانه
‫دیگری استفاده کنید،

8
00:00:31,000 --> 00:00:35,000
‫اما Jasmine پشتیبانی بهتری را ارائه می‌دهد، بنابراین در این بخش از آن استفاده می‌کنیم.

9
00:00:35,000 --> 00:00:39,000
‫ذکر این نکته مهم است که در این بخش، فرض میکنم شما با Jasmine آشنای دارید.

10
00:00:39,000 --> 00:00:43,000
‫اگر این چنین نیست، می‌توانید که دوره‌ایی که اشاره کرده‌م مراجعه نمائید.

11
00:00:43,000 --> 00:00:46,000
‫در آنجا در یک بخش کامل Jasmine را توضیح داده‌ام، پیشنهاد میکنم آن را ببینید.

12
00:00:46,000 --> 00:00:51,000
‫خب، همچنین mocking را نیز توضیح می‌دهیم، در همان دوره یک بخش کامل نیز
‫به کتابخانه Sinon

13
00:00:51,000 --> 00:00:55,000
‫اختصاص داده شده است. که یکی دیگر از بخش‌هایی است که شما را با نحوه

14
00:00:55,000 --> 00:01:01,000
‫استفاده از آن آشنا می‌کند. در نهایت درباره Karma توضیح خواهیم داد،
‫می‌خواهیم نحوهٔ نوشتن آزمون‌های واحد را شرح دهیم.

15
00:01:01,000 --> 00:01:03,000
‫ابتدا با نحوه نوشتن آزمون‌های واحد برای کنترلرها شروع خواهیم کرد.

16
00:01:03,000 --> 00:01:06,000
‫سپس چگونگی تست سرویس‌ها را بررسی خواهیم کرد، سپس فیلترها،

17
00:01:06,000 --> 00:01:11,000
‫در نهایت کارمان را با انجام آزمون واحد برای دایرکتیوها به پایان می‌رسانیم

18
00:01:11,000 --> 00:01:15,000
‫آخرین مورد، نحوه انجام end to end testing با انگولار میباشد.

19
00:01:15,000 --> 00:01:18,000
‫این نوع تست برای انگولار خیلی قدرتمند و منحصر به فرد می‌باشد

20
00:01:18,000 --> 00:01:24,000
‫که به شما امکان نوشتن تست‌هایی که قابلیت آزمایش برنامه‌تان را در یک محیط تولید
‫در اختیارتان قرار می‌دهد.

21
00:01:24,000 --> 00:01:28,000
‫می‌توانید مرورگر را به صورت خودکار در بیاورید و سناریوهای مختلفی را برای
‫آن انجام دهید

22
00:01:32,000 --> 00:01:36,000
‫این نوع تست‌ها می‌توانند خیلی ارزشمند باشند، اما خیلی سخت هستند
‫زیرا ممکن است زمانیکه ساختار HTML را تغییر میدهید

23
00:01:36,000 --> 00:01:40,000
‫دیگر عمل نکنند. خب، مراقب باشید در زمان نوشتن تست‌های end to end

24
00:01:40,000 --> 00:01:45,000
‫آنها را نزدیک به HTML قرار دهید.

