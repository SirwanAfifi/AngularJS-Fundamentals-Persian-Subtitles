1
00:00:02,000 --> 00:00:07,000
‫اولین قدم برای تست کردن یک دایرکتیو پیکربندی صحیح Karma است.

2
00:00:07,000 --> 00:00:10,000
‫این مورد زمانی اهمیت دارد که بخواهیم از تمپلت‌های دیگری استفاده کنیم.

3
00:00:10,000 --> 00:00:14,000
‫اگر از تمپلیت‌های خارجی استفاده نمی‌کنید، آنگاه تا زمانیکه Karma برای سایر آزمون‌های واحد
‫در حال اجرا باشد،

4
00:00:14,000 --> 00:00:19,000
‫میتوان از همان برای اجرای تست‌های directive نیز بهره برد. اما اگر می‌خواهید
‫از تمپلیت‌های خارجی استفاده کنید

5
00:00:19,000 --> 00:00:22,000
‫دو تنظیم دیگر را باید برای آماده‌سازی

6
00:00:22,000 --> 00:00:25,000
‫تست‌کردن دایرکتیوها انجام دهید.

7
00:00:25,000 --> 00:00:30,000
‫زیرا زمانیکه انگولار با یک دایرکتیوی که تمپلیت خارجی برای آن تعیین شده است،
‫مواجه می‌شود

8
00:00:30,000 --> 00:00:34,000
‫یک درخواست از نوع get را برای تمپلیت ارسال میکند.

9
00:00:34,000 --> 00:00:38,000
‫زمانیکه تست‌هایمان را تحت Karma انجام میدهیم، نمی‌خواهیم این درخواست
‫get اجرا شود.

10
00:00:38,000 --> 00:00:43,000
‫در عوض می‌خواهیم تمپلیت‌ها بارگذاری شوند.

11
00:00:43,000 --> 00:00:47,000
‫برای اینکار باید دو کار را انجام دهیم.

12
00:00:47,000 --> 00:00:53,000
‫ابتدا، تمپلیت‌ها را به لیست فایل‌های که Karma بارگذاری خواهد کرد، اضافه می‌کنیم.

13
00:00:53,000 --> 00:00:58,000
‫از آنجائیکه basePath دایرکتوری برنامه است و هدف بارگذاری تمپلیت
‫برای دایرکتیوها است،

14
00:00:58,000 --> 00:01:03,000
‫می‌توانم کدهای زیر را اضافه کنم. با افزودن این کدها، به Karma
‫میگویم که نیاز به بارگذاری تمام

15
00:01:03,000 --> 00:01:09,000
‫فایل‌های HTML در این دایرکتیوری داریم، اما تنها انجام اینکار کافی نیست.

16
00:01:09,000 --> 00:01:14,000
‫برای انجام اینکار، لازم است تا Karma این فایل‌های HTML را پردازش کند.

17
00:01:14,000 --> 00:01:19,000
‫یک پیش‌پردازنده توکار برای Karma با نام html2js وجود دارد که
‫همین کار را انجام خواهد داد.

18
00:01:19,000 --> 00:01:24,000
‫محتوی یک فایل HTML را خوانده و کدهای جاوا اسکریپت را ایجاد میکند
‫که فایل HTML را از نو ‫به عنوان نودهای DOM تولید خواهد کرد.

19
00:01:24,000 --> 00:01:29,000
‫بنابراین، برای پردازش تمپلیت‌ها به این روش، باید این پیش‌پردازنده را
‫به فایل پیکربندی مان اضافه کنیم.

20
00:01:29,000 --> 00:01:34,000
‫با افزودن بخش زیر اینکار را انجام میدهم.

21
00:01:34,000 --> 00:01:37,000
‫این پیکربندی اینکار را برای من انجام میدهد. اکنون یک نکته مهم که باید

22
00:01:41,000 --> 00:01:44,000
‫باید مسیر تمپلیت با ویژگی URL

23
00:01:44,000 --> 00:01:46,000
‫در دایرکتیومان مطابقت داشته باشد.

24
00:01:46,000 --> 00:01:50,000
‫برای این دمو، می‌خواهیم دایرکتیو eventThumbnail را تست کنیم.

25
00:01:50,000 --> 00:02:01,000
‫خب، اجازه دهید در این دایرکتیو مسیر تعیین شده برای تمپلیت را بررسی کنیم.

26
00:02:01,000 --> 00:02:04,000
‫بسیار خب، همانطور که مشاهده میکنید این URL

27
00:02:04,000 --> 00:02:08,000
‫به تمپلیت partials/directives/eventThumbnail. html اشاره دارد.

28
00:02:08,000 --> 00:02:13,000
‫اگر به فایل config برویم خواهیم دید که مسیرها همان مسیر basePath هستند.

29
00:02:18,000 --> 00:02:23,000
‫برای مثال، basePath را برای ریشه دایرکتیو تعیین میکنیم.

30
00:02:23,000 --> 00:02:29,000
‫برای دریافت partials باید app. partials را مشخص کنیم.

31
00:02:29,000 --> 00:02:33,000
‫سپس باید این تغییر را در پیش‌پردازنده نیز اعمال کنیم.

32
00:02:33,000 --> 00:02:36,000
‫اما این کار نخواهد کرد زیرا آن دو مسیر یک مسیر را

33
00:02:36,000 --> 00:02:41,000
‫با مسیر داخل دایرکتیو به اشتراک نخواهند گذاشت.

34
00:02:41,000 --> 00:02:46,000
‫بنابراین می‌توانیم مسیر داخل فایل پیکربندی با پوشه partials آغاز شود.

35
00:02:46,000 --> 00:02:52,000
‫اگر این تغییرات را لغو کنم، به خوبی کار خواهد کرد

