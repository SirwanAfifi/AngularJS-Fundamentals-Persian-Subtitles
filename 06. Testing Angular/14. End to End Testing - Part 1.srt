1
00:00:02,000 --> 00:00:05,000
‫در این بخش می‌خواهیم یکسری تست واقعی بنویسیم.

2
00:00:05,000 --> 00:00:11,000
‫اما، قبل از نوشتن این تست‌ها، باید بدانیم که چه چیزی را دقیقاً می‌خواهیم
‫تست کنیم.

3
00:00:11,000 --> 00:00:15,000
‫اجازه دهید به تعدادی سناریو برای این اپلیکیشن نگاهی بیندازیم

4
00:00:15,000 --> 00:00:21,000
‫یکی از مواردی که برنامه ما در حالت پیش‌فرض انجام میدهد

5
00:00:21,000 --> 00:00:29,000
‫رفتن به مسیر events است. بنابراین، اگر حتی این قسمت را برداریم
‫دوباره به این صفحه هدایت خواهد شد.

6
00:00:29,000 --> 00:00:32,000
‫بنابراین اولین تست بررسی مسیریابی پیش‌فرض خواهد بود.

7
00:00:32,000 --> 00:00:38,000
‫خب، درون فایل scenarios اولین تست را خواهیم نوشت.

8
00:00:38,000 --> 00:00:42,000
‫بنابراین برای این تست باید به URL ریشه برویم.

9
00:00:42,000 --> 00:00:47,000
‫اینکار را با فراخوانی تابع browser انجام خواهم داد. این تابع یکی از
‫توابع سراسری ویژه‌ایی است که

10
00:00:47,000 --> 00:00:53,000
‫در تست‌های end-to-end در دسترس می‌باشد. تابع browser
‫دارای یک تابع navigateTo است.

11
00:00:53,000 --> 00:00:58,000
‫برای این تابع علامت / را به عنوان پارامتر پاس خواهم داد. که ما را به ریشه
‫سایت هدایت خواهد کرد.

12
00:00:58,000 --> 00:01:02,000
‫اکنون انتظار داریم که مسیر events باشد اینکار را توسط تابع expect انجام میدهیم

13
00:01:02,000 --> 00:01:08,000
‫سپس از مرورگر درخواست URL فعلی را می‌کنیم.

14
00:01:08,000 --> 00:01:16,000
‫اکنون که تست نوشته شده است، آن را در Karma اجرا می‌کنیم.

15
00:01:16,000 --> 00:01:22,000
‫خب، تست ما اجرا و پاس شده است. اجازه دهید آن را با مقدار دیگری بررسی کنیم

16
00:01:22,000 --> 00:01:31,000
‫خب، تست با شکست مواجه میشود. خب، انتظار داریم که مسیر events2 باشد،

17
00:01:31,000 --> 00:01:39,000
‫اما اینطور نیست، در واقع events است. خب اجازه دهید آن را درست کنیم.

18
00:01:39,000 --> 00:01:40,000
‫خب، اجازه دهید یک سناریوی دیگر را بررسی کنیم.

19
00:01:40,000 --> 00:01:45,000
‫می‌خواهم این صفحه Events را تست کنم. بنابراین، می‌خواهم دو مورد را
‫در این صفحه تست کنم.

20
00:01:45,000 --> 00:01:49,000
‫می‌خواهم ببنم که آیا عنوان Events است همچنین آیا اولین آیتم

21
00:01:49,000 --> 00:01:55,000
‫Angular Code Camp است. بنابراین، یک تست جدید خواهیم نوشت.

22
00:01:55,000 --> 00:02:00,000
‫اینبار یک describe را اضافه میکنم زیرا در صفحه Events هستیم.

23
00:02:00,000 --> 00:02:06,000
‫در این describe یک beforeEach برای هدایت به صفحه Events ایجاد خواهم کرد.

24
00:02:06,000 --> 00:02:09,000
‫در اینحالت

25
00:02:09,000 --> 00:02:14,000
‫همیشه میدانم که در صفحه Events قرار دارم.

26
00:02:14,000 --> 00:02:21,000
‫خب، اجازه دهید تست را بنویسیم.

27
00:02:21,000 --> 00:02:25,000
‫ابتدا بررسی می‌کنیم که آیا Events عنوان صفحه است.

28
00:02:25,000 --> 00:02:32,000
‫اکنون، اگر به partial مربوط به آن صفحه برویم یعنی eventList

29
00:02:32,000 --> 00:02:37,000
‫در اینجا Events یک تگ h1 است. خب به سناریوی تست برمیگردیم
‫و expect را به ای صورت می‌نویسیم

30
00:02:37,000 --> 00:02:44,000
‫یعنی انتظار داریم متن متن Events باشد. در اینجا تابع element
‫را فراخوانی میکنم.

31
00:02:44,000 --> 00:02:52,000
‫این تابع خیلی شبیه به تابع jQuery است. می‌توانم یک selector جی‌کوئری را به آن پاس دهم
‫و این تابع المنت را برای من پیدا خواهد کرد

32
00:02:52,000 --> 00:02:56,000
‫خب اکنون به متن درون h1 دسترسی داریم.

33
00:02:56,000 --> 00:03:01,000
‫برای اینکار، تابع text را فراخوانی میکنم. اکنون، از تابع toMatch
‫استفاده میکنم

34
00:03:01,000 --> 00:03:07,000
‫زیرا می‌خواهم یک عبارت با قاعده را به آن پاس دهم. این روش در واقع
‫خیلی بهتر از چک کردن توسط متد toBe است

35
00:03:07,000 --> 00:03:11,000
‫زیرا گرفتن متن یک مجموعه از نودهای DOM در یک HTML، ممکن است
‫مواردی زیاد دیگری را برایتان بازیابی کند

36
00:03:11,000 --> 00:03:15,000
‫یک روش دیگر استفاده از تابع

37
00:03:15,000 --> 00:03:20,000
‫toContains است.

38
00:03:20,000 --> 00:03:26,000
‫مورد دیگری که می‌خواستم بررسی کنم عبارت Angular Code Camp بود.

39
00:03:26,000 --> 00:03:28,000
‫اکنون درون eventList ساختار HTMLی را درون آن نمی‌بینیم زیرا
‫از یک دایرکتیو استفاده می‌کنیم

40
00:03:34,000 --> 00:03:37,000
‫نام event در اینجا داخل یک تگ h2 قرار گرفته است.

41
00:03:37,000 --> 00:03:42,000
‫خب درون سناریو یک expect به این صورت می‌نویسیم

42
00:03:47,000 --> 00:03:54,000
‫بسیار خوب، اکنون تست را ذخیره کرده‌ایم، اجازه دهید آنرا اجرا کنیم
‫و خروجی را مشاهده کنیم.

43
00:03:54,000 --> 00:03:57,000
‫خب، اکنون دو تست را که هر دوی آنها پاس شده است را اجرا کرده‌ایم.

44
00:03:57,000 --> 00:04:04,000
‫اجازه دهید قسمت‌هایی از صفحه Event Details را نیز تست کنیم.

45
00:04:04,000 --> 00:04:09,000
‫خب، اجازه دهید به اولین event مراجعه کنیم و ببنیم چه قسمت‌هایی از آن
‫نیاز به تست دارد.

46
00:04:09,000 --> 00:04:13,000
‫با نگاهی به این صفحه، می‌بینیم که جلسات براساس نام مرتب‌سازی شده‌اند.

47
00:04:13,000 --> 00:04:20,000
‫بنابراین می‌توانیم جلساتی که براساس نام مرتب شده‌اند را بررسی کنیم.

48
00:04:20,000 --> 00:04:24,000
‫اگر آن‌ها را براساس vote مرتب‌سازی کنم، نتایج متفاوتی را دریافت خواهیم کرد.

49
00:04:24,000 --> 00:04:34,000
‫خب، اجازه دهید آنها را براساس نام مرتب‌سازی کنیم
‫اینکار را با بررسی اینکه How To Be Awesome
‫آیتم اول باشد انجام خواهیم داد

50
00:04:34,000 --> 00:04:39,000
‫بنابراین مجدداً از تابع beforeEach برای هدایت به آن event استفاده خواهم کرد.

51
00:04:39,000 --> 00:04:44,000
‫با استفاده از تابع browser(). navigateTo به مرورگر خواهیم گفت که به صفحه
‫خاصی هدایت شود.

52
00:04:44,000 --> 00:04:47,000
‫خب قبل از نوشتن این تست، می‌خواهم چند دقیقه‌ایی درباره توابعی

53
00:04:47,000 --> 00:04:51,000
‫که استفاده کرده‌ایم صحبت کنم، توابع browser و expect.

54
00:04:51,000 --> 00:04:59,000
‫این توابع در مستندات درون وب‌سایت انگولار موجود هستند. 
‫اجازه دهید نگاهی به آنها بیندازیم.

55
00:04:59,000 --> 00:05:07,000
‫خب، درون وب‌سایت انگولار به صفحهٔ Developer Guide
‫خواهیم رفت و بر روی لینک E2E testing کلیک میکنم.

56
00:05:07,000 --> 00:05:11,000
‫در اینجا API‌ها را برای شما نشان داده است.

57
00:05:11,000 --> 00:05:14,000
‫این لیست توابعی است که درون تست‌های end-to-end می‌توانید
‫از آنها استفاده کنید.

58
00:05:14,000 --> 00:05:20,000
‫همانطور که مشاهده می‌کنید browser دارای توابع زیادی است
‫تابع expect و چندین تابع دیگر نیز موجود هستند.

59
00:05:20,000 --> 00:05:22,000
‫از چندتای آنها استفاده خواهیم کرد، اما از تمام آنها استفاده نمی‌کنیم.

60
00:05:22,000 --> 00:05:26,000
‫اگر هر سوالی درباره APIها داشتید،

61
00:05:26,000 --> 00:05:29,000
‫در اینجا می‌توانید درباره آنها اطلاعات زیادی را بدست بیاورید.

62
00:05:29,000 --> 00:05:34,000
‫مستندات برای تمام توابع می‌توانست کاملتر باشد.

63
00:05:34,000 --> 00:05:36,000
‫امیدوارم در آینده کاملتر شود،

64
00:05:36,000 --> 00:05:41,000
‫در اینجا لیست توابع و اطلاعاتی درباره آنها وجود دارد.

65
00:05:41,000 --> 00:05:44,000
‫اکنون، تست را می‌نویسیم.

66
00:05:44,000 --> 00:05:48,000
‫خب، برای دانستن اینکه چه المنتی باید انتخاب شود،
‫باید با ساختار HTML آن آشنا باشیم.

67
00:05:48,000 --> 00:05:54,000
‫خب اجازه دهید نگاهی به دایرکتیو event و جلسات بیندازیم
‫همانطور که مشاهده می‌کنید جلسات

68
00:05:54,000 --> 00:05:59,000
‫یک دایرکتیو با نام session-thumbnail است. بنابراین به آن نگاهی می‌اندازیم

69
00:05:59,000 --> 00:06:03,000
‫در اینجا نام جلسه داخل یک تگ h4 قرار دارد.

70
00:06:03,000 --> 00:06:09,000
‫بنابراین درون سناریو، یک expectation برای h4 می‌نویسم،

71
00:06:09,000 --> 00:06:20,000
‫این تگ دارای کلاس well-title است، و همچنین دارای name
‫How to Be Awosome است. اجازه دهید تست را اجرا کنم.

72
00:06:20,000 --> 00:06:25,000
‫بسیار خوب، تست با موفقیت پاس شد. اکنون به سناریوی بعدی
‫خواهیم پرداخت.

73
00:06:25,000 --> 00:06:30,000
‫مورد دیگر بررسی تعداد جلسات برای این event است.

74
00:06:30,000 --> 00:06:38,000
‫این event پنج جلسه دارد. اجازه دهید یک تست برای آن بنویسیم.

75
00:06:44,000 --> 00:06:50,000
‫خب به partial مربوط به صفحه Event Detail برمی‌گردیم
‫و نگاهی به ساختار HTML آن می‌اندازیم.

76
00:06:50,000 --> 00:06:53,000
‫با نگاهی به آن خواهیم دید که یک لیست ul که دارای کلاس
‫thumbnails است، داریم

77
00:06:53,000 --> 00:06:58,000
‫همچنین دارای یک تگ li که برای هر session تکرار می‌شود، است.

78
00:06:58,000 --> 00:07:04,000
‫بنابراین برای شمارش آن، از یک selector که برای کلاس thumbnails
‫جستجو کند استفاده خواهم کرد

79
00:07:04,000 --> 00:07:08,000
‫همچنین برای liهای داخل آن نیز جستجو خواهد کرد. سپس از تابع
‫count می‌توانم استفاده کنم.

80
00:07:08,000 --> 00:07:13,000
‫این تابع آیتم‌های لیست را شمارش خواهد کرد. 
‫اجازه دهید تست را نیز اجرا کنم.

