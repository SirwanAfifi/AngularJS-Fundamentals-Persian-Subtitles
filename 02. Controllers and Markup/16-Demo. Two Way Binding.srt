1
00:00:01,500 --> 00:00:06,500
‫اجازه دهید مثالهای مربوط به انقیاد دو طرفه توسط دایرکتیو ngModel
‫را به صورت دقیق‌تر توضیح دهیم.

2
00:00:06,500 --> 00:00:09,500
‫یک قابلیت جدید به برنامه مان اضافه می‌کنیم، تا کاربران بتوانند

3
00:00:09,500 --> 00:00:24,500
‫یک رویداد جدید را در صفحه ایجاد کنند. یک صفحه HTML جدید با نام
‫NewEvent. html را ایجاد می‌کنم

4
00:00:24,500 --> 00:00:30,500
‫اکنون، به منظور دسترسی به این صفحه می‌توانم از طریق
‫منوی بالا صفحه به آن دسترسی داشته باشم.

5
00:00:30,500 --> 00:00:38,500
‫بنابراین، در صفحه EventDetails در قسمت nav آیتم هایی را به آن اضافه میکنم.

6
00:00:38,500 --> 00:00:42,500
‫بسیار خوب، حالا لینک به صفحه را داریم. اکنون تمام ساختار HTML

7
00:00:42,500 --> 00:00:50,500
‫این صفحه را برای صفحه جدید کپی میکنم.

8
00:00:50,500 --> 00:00:58,500
‫خب این div را انتخاب و سپس آن را حذف میکنم.

9
00:00:58,500 --> 00:01:03,500
‫اکنون یک div جدید ایجاد میکنم و یک کنترلر را برای آن تعیین میکنم

10
00:01:03,500 --> 00:01:08,500
‫سپس نام این کنترلر را EditEventController می‌گذارم. به این دلیل
‫این نام را انتخاب کردم که این صفحه در بیشتر مواقع در آینده نه تنها برای

11
00:01:08,500 --> 00:01:14,500
‫ایجاد رویداد بلکه برای ویرایش آن نیز مورد استفاده قرار می‌گیرد.

12
00:01:14,500 --> 00:01:21,500
‫مقداری padding به آن اضافه میکنم، یک container و یک عنوان داخل آن ایجاد میکنم،

13
00:01:21,500 --> 00:01:30,500
‫اکنون یک فرم که شامل عناصر input برای ورود اطلاعات توسط کاربر
‫است را ایجاد خواهم کرد.

14
00:01:30,500 --> 00:01:36,500
‫اکنون، یک lable و input برای نام، تاریخ، زمان و مکان رویداد
‫ایجاد میکنم.

15
00:01:53,500 --> 00:02:06,500
‫خب تعدادی فیلد input برای شهر و استان و یک lable و input نیز
‫برای تصویر ایجاد میکنم.

16
00:02:06,500 --> 00:02:10,500
‫اکنون، جهت ثبت تصویر توسط کاربران یک تگ image

17
00:02:10,500 --> 00:02:17,500
‫که به آدرس تصویر متصل خواهد شد ایجاد خواهم کرد. همانند قبل،
‫از دایرکتیو ng-src برای تصویر استفاده میکنم.

18
00:02:17,500 --> 00:02:24,500
‫سپس دو دکمه یکی برای ذخیره و دیگری برای انصراف ایجاد
‫خواهم کرد.

19
00:02:24,500 --> 00:02:29,500
‫خب، ساختار HTML ما آماده است، اما اگر این صفحه را اجرا کنیم

20
00:02:29,500 --> 00:02:36,500
‫با خطا مواجه میشود، زیرا هنوز کنترلری با نام EditEventController ایجاد نشده است.
‫بنابراین قبل از ایجاد آن

21
00:02:36,500 --> 00:02:43,500
‫در این قسمت اسکریپت مربوطه را اضافه میکنم.

22
00:02:43,500 --> 00:02:54,500
‫و اکنون کنترلر را ایجاد میکنم.

23
00:02:54,500 --> 00:02:58,500
‫اکنون که کنترلر را ایجاد کردیم، اجازه دهید کارهایی را که انجام دادیم را با هم بررسی کنیم.

24
00:02:58,500 --> 00:03:04,500
‫صفحه را رفرش می‌کنم و همانطور که مشاهده می‌کنید یک منوی راهبری
‫در این بالا داریم. بر روی آن کلیک می‌کنیم

25
00:03:04,500 --> 00:03:10,500
‫و صفحه ایجاد رویداد را داریم. اکنون، خیلی خوب به نظر میرسد، اما
‫متاسفانه در حال حاضر کار خاصی را انجام نمی‌دهد.

26
00:03:10,500 --> 00:03:15,500
‫مهم نیست که چه چیزی را در این فیلد وارد کنم، اگر بر روی دکمه
‫Save و یا Cancel کلیک کنم در واقع اتفاق خاصی نمی‌افتد. البته
‫همانطور که دیدید

27
00:03:15,500 --> 00:03:20,500
‫این دکمه‌ها هیچ دایرکتیوی برای کلیک ندارند در نتیجه با کلیک بر روی آنها اتفاقی
‫رخ نمی‌دهد، اگر قبلا رویداد کلیک را مدیریت می‌نمودم

28
00:03:20,500 --> 00:03:27,500
‫احتمالا هم‌اکنون هیچ داده‌ای در scope ام وجود نداشت. آنچه می‌خواهم، دیتای درون scope است.

29
00:03:27,500 --> 00:03:35,500
‫بنابراین، در داخل HTML دایرکتیو model را برای هر کدام از فیلدها اضافه میکنم.

30
00:03:35,500 --> 00:03:41,500
‫از فیلد name شروع میکنم، دایرکتیو model را به آن اضافه میکنم

31
00:03:41,500 --> 00:03:48,500
‫سپس برای فیلدهای دیگر نیز آیتم مربوط را اضافه میکنم.

32
00:03:48,500 --> 00:03:51,500
‫اکنون، اگر به کنترلر مربوطه مراجعه کنید، مشاهده خواهید کرد که نام ها

33
00:03:51,500 --> 00:03:56,500
‫را با ساختار داده ایی که ایجاد کردیم تطبیق داده ام.

34
00:03:56,500 --> 00:04:00,500
‫خب، این هم آخرین مورد. اکنون هیچ رخداد کلیکی برای دکمه‌ها نداریم،

35
00:04:00,500 --> 00:04:08,500
‫اما این مورد به درستی انجام شده است اجازه دهید آن را با هم بررسی کنیم.

36
00:04:08,500 --> 00:04:13,500
‫اگر در فیلد تصویر URL تصویر را وارد کنم همانطور که مشاهده می‌کنید تگ img
‫به صورت اتوماتیک

37
00:04:13,500 --> 00:04:20,500
‫به URLی که اینجا وارد کردم بایند میشود. به محض اینکه URL را
‫تغییر دهم به تصویر جدید به روز خواهد شد،

38
00:04:20,500 --> 00:04:25,500
‫اما چون این یک URL معتبر نیست تصویری اینجا نمایش داده نمی‌شود.

39
00:04:25,500 --> 00:04:32,500
‫خب این انقیاد دو طرفه است. همانطور که در کد مشاهده می‌کنید
‫این input یک مدل از event. imageUrl است

40
00:04:32,500 --> 00:04:36,500
‫و این تصویر سورس اش event. imageUrl است.

41
00:04:36,500 --> 00:04:43,500
‫یک شیء در Scopeام با نام imageUrl دارم که به سورس تصویر متصل شده است.

42
00:04:43,500 --> 00:04:48,500
‫خب این روش انقیاد دو طرفه را نشان میدهد. هر وقت محتویات textbox را
‫تغییر میدهم،

43
00:04:48,500 --> 00:04:54,500
‫محتویات مدل نیز به صورت اتوماتیک به روز خواهد شد.

44
00:04:54,500 --> 00:04:57,500
‫خب، برای مثال اگر در اینجا یک div ایجاد کنم.

45
00:04:57,500 --> 00:05:05,500
‫و آن را به یکی از پراپرتی‌های مدل بایند کنم، به صورت اتوماتیک این
‫div نیز به روز رسانی می‌شود.

46
00:05:05,500 --> 00:05:11,500
‫همانطور که مشاهده می‌کنید وقتیکه چیزی را در اینجا تایپ میکنم
‫این قسمت به روز رسانی میشود. این یکی از ویژگیهای زیبای انگولار است.

47
00:05:11,500 --> 00:05:16,500
‫این قبیل انقیاد دو طرفه می‌تواند از کدنویسی‌های زیاد صرفه جویی کند.

48
00:05:16,500 --> 00:05:21,500
‫اکنون، جهت اتمام کار اجازه دهید رخداد کلیک را برای دکمه‌ها مدیریت کنیم.

49
00:05:21,500 --> 00:05:28,500
‫اکنون دقت کنید که در اینجا برای این متد saveEvent یک شیء را با نام
‫event را به عنوان پارامتر پاس داده ام.

50
00:05:28,500 --> 00:05:33,500
‫به خاطر دارید موقعی که رخداد کلیک را برای امتیازدهی مدیریت کردیم؟
‫یک شیء session را به عنوان ورودی پاس دادیم.

51
00:05:33,500 --> 00:05:39,500
‫خب در اینجا هم کار را انجام میدهیم. دوباره انگولار شیء مربوطه
‫را به عنوان ورودی پاس می‌دهیم

52
00:05:39,500 --> 00:05:45,500
‫خب، وقتی این تابع را ایجاد میکنیم

53
00:05:45,500 --> 00:05:49,500
‫شیء event با داده‌های هر کدام از فیلدها پر میشود.

54
00:05:49,500 --> 00:06:01,500
‫با نمایش خروجی توسط یک alert می‌توانیم این قضیه را اثبات کنیم.

55
00:06:01,500 --> 00:06:04,500
‫همانطور که مشخص است داده‌ها در scope قابل دسترس است.

56
00:06:04,500 --> 00:06:12,500
‫خب اجازه دهید رخداد دکمه Cancel را نیز مدیریت کنیم
‫با کلیک بر روی این دکمه کاربر به صفحه EventDetail هدایت میشود.

57
00:06:12,500 --> 00:06:16,500
‫بسیار خوب. با ایجاد فیلدها و مشخص کردن دایرکتیو model انقیاد داده
‫دو طرفه را پیاده سازی کرده ایم.

58
00:06:16,500 --> 00:06:20,500
‫و به داده‌های موجود در مدل که داخل

59
00:06:20,500 --> 00:06:23,500
‫شیء scope قرار دارند بایند کرده ایم.

60
00:06:23,500 --> 00:06:27,500
‫خب، اجازه دهید بحث انقیاد داده دو طرفه را با یک
‫تست به اتمام برسانیم.

61
00:06:27,500 --> 00:06:32,500
‫درست یا غلط؟ انقیاد داده دو طرفه با فشردن
‫هر کلیکی به روز رسانی خواهد شد.

62
00:06:32,500 --> 00:06:35,500
‫درست است.

63
00:06:35,500 --> 00:06:41,500
‫کدام عنصر HTML با انقیاد داده دو طرفه کار میکند؟

64
00:06:41,500 --> 00:06:45,500
‫عناصر input, select و textarea.

65
00:06:45,500 --> 00:06:49,500
‫اگر به یک پراپرتی رجوع کنید که در داخل دایرکتیو مدل موجود نیست
‫چه اتفاقی خواهد افتاد؟

66
00:06:49,500 --> 00:06:53,500
‫وقتیکه به یک پراپرتی که موجود نیست رجوع کنید،

67
00:06:53,500 --> 00:06:58,500
‫انگولار آن پراپرتی را داخل scope برایتان ایجاد خواهد کرد.

