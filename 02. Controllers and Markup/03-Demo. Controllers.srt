1
00:00:02,000 --> 00:00:06,000
‫در این بخش، در واقع می‌خواهیم به صورت عملی به کنترلرها
‫نگاهی بیندازیم و…

2
00:00:06,000 --> 00:00:13,000
‫اولین صفحه مان را ایجاد کنیم. خب، به دایرکتوری app میروم و
‫با کلیک راست یک فایل جدید با…

3
00:00:13,000 --> 00:00:26,000
‫نام EventDetails ایجاد میکنم.

4
00:00:26,000 --> 00:00:30,000
‫این صفحه قرار است اطلاعات کامل یک رویداد را نمایش دهد. 
‫اطلاعاتی درباره…

5
00:00:30,000 --> 00:00:37,000
‫رویداد، مانند نام و محل و زمان و همچنین اطلاعاتی در رابطه با
‫جلسات رویداد را نمایش خواهد داد.

6
00:00:37,000 --> 00:00:42,000
‫خب، با قرار دادن یک ساختار HTML ساده شروع میکنیم.

7
00:00:42,000 --> 00:00:50,000
‫از کلاس container بوت استرپ استفاده میکنم و در نهایت تگ
‫پایانی body و html را قرار میدهم.

8
00:00:50,000 --> 00:00:57,000
‫به علاوه برای اینکه انگولار بتواند اجرا شود تگ‌های اسکریپت را
‫در صفحه قرار میدهم در نتیجه می‌توانم ارجاعی به

9
00:00:57,000 --> 00:01:01,000
‫قسمت‌های انگولار داشته باشم.

10
00:01:01,000 --> 00:01:05,000
‫خب، از اسکریپت هایی که اینجا paste کردم، سه اسکریپت اول که
‫لازم دارم:

11
00:01:05,000 --> 00:01:11,000
‫jQuery،Underscore و Bootstrap هستند. اسکریپت‌های موردبحث
‫در اینجا angular و app هستند.

12
00:01:11,000 --> 00:01:15,000
‫angular در اینجا طبعا همان کتابخانه انگولار می‌باشد
‫و app. js نیز اسکریپتی است که

13
00:01:15,000 --> 00:01:21,000
‫ماژول‌های برنامه را بارگذاری میکند. خب ما آماده ایم
‫این فایل را برای انجام یکسری کار آماده کنیم.

14
00:01:21,000 --> 00:01:31,000
‫کار را با افزودن ویژگی ng-app به تگ HTML شروع می‌کنیم.

15
00:01:31,000 --> 00:01:38,000
‫در فایل app. js نام برنامه را eventsApp گذاشتیم در نتیجه

16
00:01:38,000 --> 00:01:47,000
‫همان نام را اینجا می‌نویسم و به انگولار خواهد گفت که این همان
‫ماژولی است که این صفحه را اجرا میکند.

17
00:01:47,000 --> 00:01:52,000
‫بعد از قرار دادن نام، اولین کنترلر را اضافه میکنم.

18
00:01:52,000 --> 00:02:00,000
‫درست همین جا یک div اضافه میکنم و به انگولار می‌گویم که
‫این div دربرگیرندهٔ یکی از کنترلرهای من است.

19
00:02:00,000 --> 00:02:03,000
‫نام کنترلر را EventController می‌گذارم. این کنترلر قرار است
‫برای نمایش اطلاعات یک رویداد پاسخ گو باشد.

20
00:02:03,000 --> 00:02:08,000
‫در واقع به انگولار گفته ام که این div توسط کنترلر مدیریت می‌شود.

21
00:02:08,000 --> 00:02:20,000
‫اما در واقع هنوز این کنترلر را ایجاد نکرده ام. بنابراین یک کنترلر اضافه میکنم.

22
00:02:20,000 --> 00:02:28,000
‫حالا می‌توانیم برای این کنترلر کدنویسی کنیم. بیشتر دوست دارم
‫در مد strict باشم. 
 (http: //ejohn. org/blog/ecmascript-5-strict-mode-json-and-more)

23
00:02:28,000 --> 00:02:33,000
‫به علاوه برای ایجاد یک کنترلر باید ارجاعی به همان ماژولی
‫که در app. js ایجاد کردیم، داشته باشیم.

24
00:02:33,000 --> 00:02:37,000
‫که نامش را eventsApp گذاشتیم.

25
00:02:37,000 --> 00:02:45,000
‫همچنین از تابع controller و ارسال نام کنترلر به عنوان
‫پارامتر ورودی به این تابع استفاده می‌کنیم.

26
00:02:45,000 --> 00:02:51,000
‫و حالا پارامتر دوم یک تابع می‌باشد که در واقع خود کنترلر است.

27
00:02:51,000 --> 00:02:54,000
‫حالا به خاطر دارید که در رابطه با ارتباط بین کنترلر و scope
‫صحبت کردیم؟

28
00:02:54,000 --> 00:03:02,000
‫کنترلرها مسئولیت ایجاد scope را بر عهده دارند به گونه ایی
‫که در واقع یک scope خالی را دریافت میکنند سپس…

29
00:03:02,000 --> 00:03:06,000
‫اطلاعات موردنیاز view را داخل scope قرار می‌دهند.

30
00:03:06,000 --> 00:03:12,000
‫حالا که کنترلرم را ایجاد کردم، لازم است تا این اسکریپت را
‫به صفحه ایی که ایجاد کردم معرفی کنم.

31
00:03:12,000 --> 00:03:18,000
‫بعد از app. js آن را اضافه میکنم.

32
00:03:18,000 --> 00:03:24,000
‫حالا که همه اجزا کنار هم قرار دارند، بگذارید ببینیم خروجی
‫در مرورگر به چه شکلی است.

33
00:03:24,000 --> 00:03:27,000
‫خب، همانطور که می‌بینید هیچ چیزی در صفحه قرار ندارد.

34
00:03:27,000 --> 00:03:31,000
‫در واقع ساختار HTML که قرار است در خروجی نمایش داده شود
‫را تعریف نکرده ایم و کنترلر هیچ کار خاصی انجام نمی‌دهد.

35
00:03:31,000 --> 00:03:35,000
‫بنابراین، اجازه دهید برای نمایش یکسری دیتا کنترلر را مهیا کنیم.

36
00:03:35,000 --> 00:03:40,000
‫به داخل کنترلر می‌روم و یک آیتم برای رویداد اضافه میکنم.

37
00:03:40,000 --> 00:03:44,000
‫اکنون، این آیتم قرار است به عنوان یک رویداد نمایش داده بشود. 
‫اینجا از JavaScript Object به صورت inline استفاده میکنم.

38
00:03:44,000 --> 00:03:48,000
‫در یک برنامه واقعی این اطلاعات را از سرور می‌توانید بخوانید.

39
00:03:48,000 --> 00:03:55,000
‫خب، مقداری اطلاعات به رویدادم اضافه میکنم.

40
00:03:55,000 --> 00:04:00,000
‫اکنون بریم و این اطلاعات را در صفحه نمایش دهیم.

41
00:04:00,000 --> 00:04:04,000
‫داخل div که توسط کنترلرم کنترل می‌شود مقداری کد اضافه میکنم.

42
00:04:04,000 --> 00:04:08,000
‫که نام رویداد را نمایش خواهد داد.

43
00:04:08,000 --> 00:04:14,000
‫اجازه دهید خروجی را در مرورگر ببینیم. همانطور که می‌بینید نام
‫رویداد نمایش داده شده است.

44
00:04:14,000 --> 00:04:21,000
‫اجازه دهید تعدادی آیتم بیشتر اضافه کنیم.

45
00:04:21,000 --> 00:04:25,000
‫خب، خروجی مناسب است، اجازه دهید کارهایی را که انجام
‫داده ایم با هم بررسی کنیم.

46
00:04:25,000 --> 00:04:29,000
‫همانطور که اینجا می‌بینید، هر چیزی که داخل این جفت براکت است انگولار…

47
00:04:29,000 --> 00:04:34,000
‫به عنوان یک عبارت در نظر می‌گیرد که باید ارزیابی شده و داخل صفحه قرار داده شوند.

48
00:04:34,000 --> 00:04:39,000
‫بنابراین، همه چیز را با پیشوند event شروع کرده ام. 
‫اجازه دهید به کنترلرمان برویم و علت آن رو بررسی کنیم.

49
00:04:39,000 --> 00:04:46,000
‫شیء scope یک شیء با نام event دارد. بنابراین، آنچه داخل صفحه
‫اتفاق می‌افتد هر چیزی داخل div

50
00:04:46,000 --> 00:04:52,000
‫که توسط کنترلرم کنترل می‌شود دارای هر شیء که داخل scope
‫موجود است می‌باشد.

51
00:04:52,000 --> 00:04:59,000
‫بنابراین event که داخل scope نیز موجود است اکنون در دسترس
‫می باشد و می‌توانم به خصوصیات آن دسترسی داشته باشم.

52
00:04:59,000 --> 00:05:01,000
‫و هر کدام را بر روی صفحه نمایش دهم.

53
00:05:01,000 --> 00:05:06,000
‫این قالب کدنویسی، با این عبارات، ساده‌ترین روش برای
‫گذاشتن عناصر بر روی صفحه توسط انگولار می‌باشد.

54
00:05:06,000 --> 00:05:12,000
‫اکنون اطلاعات اولیه را بر روی صفحه نمایش داده ایم. اما
‫اجازه دهید ظاهر آن را مقداری زیباتر کنیم.

55
00:05:12,000 --> 00:05:21,000
‫خب، یک نویگیشن بار را اضافه میکنم.

56
00:05:21,000 --> 00:05:24,000
‫حالا ببینیم چطور است.

57
00:05:24,000 --> 00:05:28,000
‫خب، اجازه دهید به داخل کنترلر eventمون برم و مقداری
‫به آن style بدهم.

58
00:05:54,000 --> 00:05:59,000
‫خب، اجازه دهید خروجی را در مرورگر ببینیم. 
‫حالا شروع خوبی است.

59
00:05:59,000 --> 00:06:04,000
‫اکنون، مقداری اطلاعات در رابطه با رویدادمان که فراموش کردیم
‫محل برگزاری رویداد است.

60
00:06:04,000 --> 00:06:10,000
‫خب، اجازه دهید به کنترلرمون برگردیم و آن اطلاعات را اضافه کنیم،
‫اما تنها…

61
00:06:10,000 --> 00:06:13,000
‫آدرس را قرار نمی‌دهم.

62
00:06:13,000 --> 00:06:25,000
‫اگر یک شیء location که حاوی اطلاعاتی در رابطه با آدرس
‫باشد منطقی به نظر می‌رسد.

63
00:06:25,000 --> 00:06:35,000
‫حالا این اطلاعات را در صفحه مان قرار میدهم.

64
00:06:35,000 --> 00:06:41,000
‫اکنون، اجازه دهید اون رو بررسی کنیم. الان خوب به نظر می‌رسد
‫همچنین از مزایای توییتر بوت استرپ بیشتر استفاده می‌کنیم.

65
00:06:41,000 --> 00:06:44,000
‫همه چیز خوب به نظر می‌رسد. اکنون اجازه دهید
‫مواردی را که انجام داده ایم را با هم بررسی کنیم.

66
00:06:44,000 --> 00:06:49,000
‫همانطور که مشاهده می‌کنید، در واقع داخل آبجکت event رفته ام
‫و سپس داخل location

67
00:06:49,000 --> 00:06:52,000
‫و سپس پراپرتی که می‌خوام نمایش داده شود را نوشته ام.

68
00:06:52,000 --> 00:06:56,000
‫همچنین باید توجه داشت که انگولار این کار را برای انجام می‌دهد
‫و در واقع این اجازه را به ما می‌دهد تا به زیرمجموعه‌های یک شیء
‫دسترسی داشته باشیم بنابراین نیازی به قالب بندی

69
00:06:56,000 --> 00:07:02,000
‫این داده‌ها به صورت فقط یک سطح نیست، به جای آن
‫می توانیم داده‌ها را به روشی منطقی ایجاد کنیم.

70
00:07:02,000 --> 00:07:06,000
‫اکنون یک مورد دیگر که می‌خوام اضافه کنم و فکر می‌کنم
‫جلسات هر رویداد را واضح‌تر خواهد کرد

71
00:07:06,000 --> 00:07:12,000
‫افزودن یک نوع تصویر که نشان دهنده رویداد است می‌باشد.

72
00:07:12,000 --> 00:07:19,000
‫یکی از لوگوهای انگولار که در دایرکتوری image موجود است
‫را انتخاب میکنم.

73
00:07:19,000 --> 00:07:26,000
‫خب، اکنون می‌تونم به کدهای HTML صفحه م برگردم و دقیقاً اینجا
‫اون تصویر را اضافه کنم.

74
00:07:26,000 --> 00:07:31,000
‫خب، همانطور که مشاهده می‌کنید برای قرار دادن تصویر
‫از همان سبک کدنویسی استفاده میکنم که در پائین می‌بینید،

75
00:07:31,000 --> 00:07:34,000
‫با کمی تفاوت

76
00:07:34,000 --> 00:07:39,000
‫به جای استفاده از ویژگی src تصویر، از ویژگی ng-source استفاده میکنم.

77
00:07:39,000 --> 00:07:47,000
‫کاری که این ویژگی انجام میدهد این است که درخواست
‫به این تصویر را تا زمانیکه انگولار بتواند این متن را

78
00:07:47,000 --> 00:07:54,000
‫با URL واقعی اش جایگزین کند به تاخیر می‌اندازد. در غیر اینصورت
‫به محض اینکه HTML خروجی را رندر کند مرورگر با ارسال یک درخواست

79
00:07:54,000 --> 00:08:01,000
‫شروع به یافتن تصویری با این URL میکند، که البته پیغام 404 را برمیگرداند. 
‫همچنین می‌خوام یک ویژگی alt را نیز برای این تصویر بگذارم

80
00:08:01,000 --> 00:08:06,000
‫برای مقدار این ویژگی از نام رویداد استفاده می‌کنم.

81
00:08:06,000 --> 00:08:12,000
‫خب، اجازه دهید خروجی را در مرورگر ببینیم. عالیه! برای
‫قرار دادن تمام اجزا شروع خوبی است.

82
00:08:12,000 --> 00:08:17,000
‫اکنون، یک مورد دیگر افزودن مقداری padding بیشتر به گوشه‌های صفحه می‌باشد.

