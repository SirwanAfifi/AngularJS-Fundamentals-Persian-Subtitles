1
00:00:00,310 --> 00:00:03,000
‫خب، تعدادی پراپرتی دیگر برای route موجود است که می‌خوام به شما آموزش دهم.

2
00:00:03,000 --> 00:00:10,000
‫نسبت به templateUrl اولین مورد خیلی ساده است. نام آن template است،

3
00:00:10,000 --> 00:00:18,000
‫ابتدا، به صفحه Event برمیگردیم، به یاد داشته باشید که صفحه ما فعلاً به این صورت است
‫و قرار است

4
00:00:18,000 --> 00:00:26,000
‫آن HTML را از templateUrl بگیرد. اما، چه می‌شود اگر به جای template که در این حالت

5
00:00:26,000 --> 00:00:33,000
‫قرار است عبارت Hello World باشد، خب اجازه دهید خروجی را در مروگر ببنیم.

6
00:00:33,000 --> 00:00:41,000
‫دقت داشته باشید که template به مقدار خروجی ست شده است و به جای
‫تعیین آدرس یک template می‌توانید در واقع

7
00:00:41,000 --> 00:00:47,000
‫یک رشته را برای template در نظر بگیرید. در این صورت این امکان را به شما میدهد
‫کارهای جالبی شبیه

8
00:00:47,000 --> 00:00:53,000
‫تولید template تان به صورت on the fly انجام دهید و می‌توانید
‫یک سرویس را نیز به آن پاس دهید

9
00:00:53,000 --> 00:00:56,000
‫و از یک سرویس برای تولید کردن temaplte تان استفاده کنید.

10
00:00:56,000 --> 00:01:03,000
‫خب، از این حالت معمولاً استفاده نخواهید کرد، اما باید از وجود این قابلیت مطلع باشید.

11
00:01:03,000 --> 00:01:09,000
‫مورد بعدی resolve کردن پراپرتی‌های یک route است.

12
00:01:09,000 --> 00:01:18,000
‫برای توضیح این مورد، اجازه دهید به سرویس EventData برگردیم و ابتدا صفحه را از نو
‫بارگذاری کنیم.

13
00:01:18,000 --> 00:01:27,000
‫اکنون صفحه Event به خوبی کار میکند. اجازه دهید به سرویس EventData بریم

14
00:01:27,000 --> 00:01:35,000
‫این کاری است که برای برگرداندن event هایمان انجام میدهیم. اجازه دهید
‫برای نمایش این اطلاعات یک وقفه ایجاد کنیم

15
00:01:38,000 --> 00:01:50,000
‫خب، برای اینکار از سرویس timeout استفاده می‌کنیم. برای تعیین یک وقفه
‫در فراخوانی این تابع از آن استفاده می‌کنیم.

16
00:01:50,000 --> 00:01:57,000
‫خب وقتی getEvent را صدا می‌زنیم، یک وقفه 3 ثانیه ایی ایجاد میکنیم سپس

17
00:01:57,000 --> 00:02:07,000
‫اطلاعات را دریافت می‌کنیم. خب، اجازه دهید ببنیم وقتی اطلاعات
‫بارگذاری میشوند صفحه چطور به نظر می‌رسد.

18
00:02:07,000 --> 00:02:12,000
‫بنابراین صفحه را ریفرش می‌کنم. دقت داشته باشید اطلاعاتی اینجا موجود نیست،
‫اما template در اینجا قرار دارد سپس اطلاعات نمایش داده میشوند

19
00:02:12,000 --> 00:02:21,000
‫خب این حالت زیاد جالب نیست بنابراین resolve در این شرایط می‌تواند
‫به ما کمک کند.

20
00:02:21,000 --> 00:02:26,000
‫خب، وقفه زمانی را در اینجا برمیداریم. اجازه دهید در جایی که مسیریابی
 را برای صفحه Event پیکربندی می‌کنیم

21
00:02:26,000 --> 00:02:35,000
‫پراپرتی resolve را اضافه می‌کنیم.

22
00:02:35,000 --> 00:02:46,000
‫این پراپرتی یک شیء است که یک پراپرتی event دارد که در واقع یک تابع می‌باشد.

23
00:02:46,000 --> 00:02:54,000
‫خب می‌خواهیم سرویس EventData را به این تابع پاس دهیم

24
00:02:54,000 --> 00:02:58,000
‫سپس یک promise ایجاد می‌کنیم.

25
00:02:58,000 --> 00:03:07,000
‫سپس متد eventData. getEvent را صدا می‌زنیم و event id را به آن پاس میدهیم.

26
00:03:07,000 --> 00:03:15,000
‫اکنون، معمولاً از routeParams برای گرفتن event id استفاده می‌کنیم، اما در این حالت
‫سرویس routeParams

27
00:03:15,000 --> 00:03:20,000
‫هنوز اطلاعاتش جمع آوری نشده است بنابراین باید از سرویس route استفاده کنیم

28
00:03:20,000 --> 00:03:24,000
‫از route. current. pathParams. eventId برای گرفتن event استفاده می‌کنیم.

29
00:03:24,000 --> 00:03:30,000
‫آن را به متد getEvent پاس می‌دهیم.

30
00:03:30,000 --> 00:03:39,000
‫که یک promise را برمیگرداند بنابراین میتوانیم از then و when استفاده کنیم
‫وقتی promise کامل شد یک event را برای ما بر می‌گرداند

31
00:03:39,000 --> 00:03:50,000
‫سپس باید promise مان را resolve کنیم. event را به آن پاس می‌دهیم.

32
00:03:50,000 --> 00:03:58,000
‫خب، سپس باید این deferred promise را برگردانیم. اجازه دهید این را تصحیح کنیم.

33
00:03:58,000 --> 00:04:08,000
‫خب، اکنون این پراپرتی resolve را در route مان داریم و event در واقع قرار است
‫به مقدار

34
00:04:08,000 --> 00:04:14,000
‫event بازگشت داده شده توسط eventData مقداردهی شود.

35
00:04:14,000 --> 00:04:22,000
‫خب، اکنون که پراپرتی event قرار است اطلاعات را در خود داشته باشد
‫باید در کنترلرمان از آن استفاده کنیم.

36
00:04:22,000 --> 00:04:30,000
‫خب در اینجا، به جای فراخوانی eventData، دوباره از سرویس route استفاده می‌کنیم

37
00:04:30,000 --> 00:04:41,000
‫سپس مقدار event را برابر با $route. current. locals. event قرار میدهیم.

38
00:04:41,000 --> 00:04:46,000
‫خب اکنون به این eventData دیگر نیازی نداریم.

39
00:04:46,000 --> 00:04:54,000
‫خب، اساساً این $route. current. locals. event توسط
 deferred promise ما اطلاعاتش تکمیل میشود.

40
00:04:54,000 --> 00:05:00,000
‫خب اجازه دهید خروجی صفحه را بررسی کنیم.

41
00:05:02,000 --> 00:05:06,000
‫بعد از آن داده‌ها نمایش داده می‌شوند.

42
00:05:06,000 --> 00:05:13,000
‫خب، resolve به نوعی به این صورت است که بگوئید چه لحظه صبر کن

43
00:05:13,000 --> 00:05:18,000
‫سپس اطلاعات من را نمایش بده

44
00:05:18,000 --> 00:05:24,000
‫سپس هر داده ایی که در داخل resolve جمع آوری شده است،

45
00:05:24,000 --> 00:05:29,000
‫در کنترلرتان نیز درسترسی خواهد بود.

46
00:05:29,000 --> 00:05:35,000
‫بنابراین، پراپرتی‌های routeProvider از جمله template و resolve را تکمیل میکند

47
00:05:35,000 --> 00:05:40,000
‫و روشی را جهت کنترل صفحات در اختیار شما قرار میدهد.

