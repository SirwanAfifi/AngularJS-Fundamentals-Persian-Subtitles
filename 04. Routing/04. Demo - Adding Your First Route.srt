1
00:00:00,310 --> 00:00:04,000
‫خب اجازه دهید نگاهی به افزودن قابلیت مسیریابی به برنامه بیندازیم

2
00:00:04,000 --> 00:00:07,000
‫این همان برنامه ایی است که در ماژول سرویس‌ها به آن پرداختیم

3
00:00:07,000 --> 00:00:12,000
‫تنها تفاوت آن این است که تعدادی از صفحات مربوط به مثالهای

4
00:00:12,000 --> 00:00:16,000
‫سرویس‌ها را برداشته ایم و برای برنامه ما نیاز نبود

5
00:00:16,000 --> 00:00:23,000
‫در نتیجه آنها را حذف کردیم. خب، اولین کاری که باید انجام دهیم افزودن یک

6
00:00:23,000 --> 00:00:31,000
‫صفحه است که قرار است صفحه index. html را فراخوانی کند.

7
00:00:31,000 --> 00:00:40,000
‫خب اجازه دهید ساختار HTML صفحه NewEvent را داخل اینجا کپی کنیم. به هر حال
‫index. html به عنوان صفحه پیش فرض راه اندازی شده است

8
00:00:40,000 --> 00:00:48,000
‫خب، اگر به ریشه وب سایت مراجعه کنید index. html را برای شما نمایش خواهد داد.

9
00:00:48,000 --> 00:00:57,000
‫خب، این قسمت را از صفحه NewEvent برداشتم سپس بعضی از این تگ‌ها را حذف میکنیم.

10
00:00:57,000 --> 00:01:05,000
‫خب، تمام چیزی که لازم داریم یک منوی ناوبری است که در بالای صفحه نمایش داده می‌شود

11
00:01:05,000 --> 00:01:14,000
‫همچنین یک المنت ng-view به صفحه اضافه می‌کنیم. این المنت جایی است که تمام

12
00:01:14,000 --> 00:01:19,000
‫تمپلیت‌ها در داخل برنامه مان نمایش داده می‌شوند.

13
00:01:19,000 --> 00:01:29,000
‫دقت کنید که همچنین تمام ارجاعات جاوا اسکریپتی و CSSی را در صفحه index. html داریم.

14
00:01:29,000 --> 00:01:34,000
‫خب اجازه دهید جایی را برای تمپلیت‌ها ایجاد کنیم. خب یک دایرکتوری برای آن ایجاد خواهیم کرد.

15
00:01:34,000 --> 00:01:42,000
‫این تمپلیت‌ها HTML ی هستند که در نهایت به view در برنامه ما تبدیل می‌شوند.

16
00:01:42,000 --> 00:01:47,000
‫دقت کنید که نام این دایرکتوری را templates گذاشتم نه views زیرا view در واقع
‫محصول نهایی است که

17
00:01:47,000 --> 00:01:55,000
‫یک کاربر می‌بیند زمانیکه یک تمپلیت با یک مدل ترکیب می‌شود و تمپلیت تنها HTML است.

18
00:01:55,000 --> 00:02:02,000
‫خب، صفحه NewEvent. html را به داخل دایرکتوری تمپلیت‌ها منتقل می‌کنیم.

19
00:02:02,000 --> 00:02:08,000
‫اجازه دهید مقداری از این HTML که در اینجا موردنیاز ما نیست را حذف کنم.

20
00:02:08,000 --> 00:02:18,000
‫خب، تمام این HTML و این HTML را در پائین حذف می‌کنم.

21
00:02:18,000 --> 00:02:22,000
‫خب، دقت کنید اکنون view ما درون تگ html قرار ندارد.

22
00:02:22,000 --> 00:02:29,000
‫دیگر مشکل قرار دادن تمام جاوا اسکریپت پیوست شده به صفحه را نداریم.

23
00:02:29,000 --> 00:02:35,000
‫خب، آخرین کاری که باید با این تمپلیت انجام دهیم این است که نباید تمپلیت‌های کنترلری
‫را که با آن در ارتباط است را تعریف کنیم

24
00:02:35,000 --> 00:02:38,000
‫موقع راه اندازی سیستم مسیریابی اینکار را انجام می‌دهیم.

25
00:02:38,000 --> 00:02:44,000
‫خب، این را حذف میکنم. اکنون اجازه دهید مسیریابی را راه اندازی کنیم.

26
00:02:44,000 --> 00:02:52,000
‫خب، شما به برنامه وارد می‌شوید سپس وقتی ماژول‌ها را ایجاد می‌کنید
‫می توانید یک بلاک config برای ماژول‌ها در نظر بگیرید

27
00:02:52,000 --> 00:02:58,000
‫سپس این بلاک وقتی برنامه توسط انگولار بوت استرپ شد اجرا خواهد شد.

28
00:03:02,000 --> 00:03:12,000
‫سپس ماژول پیکربندی می‌شود. بنابراین، به یک routeProvider نیاز خواهیم داشت
‫در نتیجه آن را داخل کنترلر تزریق می‌کنیم.

29
00:03:12,000 --> 00:03:20,000
‫دقت کنید که بلاک config یک ماژول را که شما متدها را در آن به صورت زنجیروار تعریف کرده اید
‫را بر می‌گرداند همانند

30
00:03:20,000 --> 00:03:27,000
‫فراخوانی یک factory می باشد. همچنین این factory یک متد را بعد از فراخوانیش برمیگرداند.

31
00:03:27,000 --> 00:03:34,000
‫خب در واقع به این سرویس myCache که مربوط به قسمت سرویس‌ها بود دیگر نیاز نداریم.

32
00:03:34,000 --> 00:03:40,000
‫خب، اجازه دهید مسیریابی مان را با استفاده از routeProvider پیکربندی کنیم.

33
00:03:40,000 --> 00:03:48,000
‫با فراخوانی when می‌تواند اینکار را انجام دهید، در اصل شما می‌گوید وقتی
‫مسیر newEvent بود

34
00:03:48,000 --> 00:03:55,000
‫سپس از این اطلاعات برای ساخت view استفاده کن. همچنین تعدادی پراپرتی
‫موجود می باشد که می‌توانید در اینجا از آنها استفاده کنید.

35
00:03:55,000 --> 00:04:02,000
‫اولین مورد آن templateUrl است می‌گوییم که الگوی

36
00:04:02,000 --> 00:04:14,000
‫مسیر newEvent به صورت templates/NewEvent. html باشد سپس کنترلر را برای
‫این route مشخص می‌کنیم.

37
00:04:14,000 --> 00:04:20,000
‫خب در اینجا با موفقیت یک route برای newEvent ایجاد کردیم همچنین
‫الگوی آن را نیز تعیین کردیم

38
00:04:20,000 --> 00:04:28,000
‫که به صورت templates/NewEvent. html می‌باشد و کنترلر 
آن نیز EditEventController است.

39
00:04:28,000 --> 00:04:35,000
‫خب اجازه دهید به صفحه index. html برگردیم، توجه کنید که منوی ما یک لینک
‫با نام Create Event دارد

40
00:04:35,000 --> 00:04:43,000
‫که به صفحه NewEvent. html هدایت می‌شود. اکنون می‌خوام به route که ساختیم
‫هدایت شود.

41
00:04:48,000 --> 00:04:54,000
‫خب دلیل اینکه چرا باید از علامت # استفاده کنیم این است
‫که انگولار از همان اطلاعاتی که

42
00:04:54,000 --> 00:05:01,000
‫مرورگرها نیز در پایان URLها امکان گذاشتن این علامت را به شما میدهند استفاده میکند
‫بعد از این علامت می‌توانید اطلاعات اضافی

43
00:05:01,000 --> 00:05:04,000
‫را که برای لینک دادن به داخل صفحه استفاده می‌شود را نیز قرار دهید.

44
00:05:04,000 --> 00:05:09,000
‫در این مورد نگران نباشید،

45
00:05:09,000 --> 00:05:15,000
‫زیرا به شما نشان خواهیم داد که چگونه می‌تواند این رفتار مرورگرها را به
‫گونه ایی تغییر دهید که

46
00:05:15,000 --> 00:05:23,000
‫این علامت در URL نشان داده نشود. بنابراین، فعلاً
‫از این علامت استفاده میکنیم.

47
00:05:23,000 --> 00:05:30,000
‫خب اجازه دهید به صفحه برگردیم، خب این برنامه ما است.

48
00:05:30,000 --> 00:05:39,000
‫اجازه دهید صفحه را ریفرش کنیم و به ریشه سایت برویم
‫و نشان دهیم در واقع

49
00:05:39,000 --> 00:05:43,000
‫چه اتفاقی میافتد، اجازه دهید به Fiddler نگاهی بیندازیم.

50
00:05:43,000 --> 00:05:48,000
‫اجازه دهید صفحه را از نو ریفرش کنیم

51
00:05:48,000 --> 00:05:57,000
‫همانطور که مشاهده می‌کنید ما به ریشه سایت درخواست فرستاده ایم اگر
‫به پاسخ دریافتی نگاه کنیم،

52
00:05:57,000 --> 00:06:03,000
‫خواهید دید که صفحه index. html می‌باشد. دقت کنید این تگ ng-view ما است.

53
00:06:03,000 --> 00:06:10,000
‫خب، چیزی که اینجا است صفحه index. html بود و هیچ view تعیین شده ایی
‫نداریم خب تمام چیزی که دریافت کردیم

54
00:06:10,000 --> 00:06:17,000
‫یک صفحه خالی index. html بود. اگر بر روی Create Event کلیک کنم صفحه
‫New Event را بارگذاری میکند،

55
00:06:17,000 --> 00:06:29,000
‫اما اگر به فیدلر برگردیم، به این URL دقت کنیم، ریشه وب سایت اصلاً
‫درخواست داده نشده است.

56
00:06:29,000 --> 00:06:39,000
‫چیزی که درخواست داده شده بود /template/NewEvent. html بود. بنابراین
‫وقتی بر روی آن لینک کلیک کردیم

57
00:06:39,000 --> 00:06:44,000
‫انگولار آن لینک را متوقف کرده و متوجه شد که یک route برای
‫آن وجود دارد و در نهایت به

58
00:06:44,000 --> 00:06:51,000
‫templates/NewEvent. html درخواست را ارسال کرده و template را در آن قرار میدهد

59
00:06:56,000 --> 00:07:03,000
‫‫اگر به فیدلر نگاهی بیندازیم خواهیم دید که

60
00:07:03,000 --> 00:07:11,000
‫تمپلیت بارگذاری شده است و اگر دوباره بر روی لینک کلیک کنم و به فیدلر برگردم،

61
00:07:11,000 --> 00:07:17,000
‫دقت کنید که در این لحظه درخواستی به سرور فرستاده نشده است.
‫زیرا زمانیکه انگولار یک تمپلیت را بارگذاری میکند

62
00:07:17,000 --> 00:07:23,000
‫آن را در کش تمپلیتش ذخیره میکند. یک سرویس کش داخلی که

63
00:07:23,000 --> 00:07:28,000
‫برای ذخیره سازی تمپلیت‌ها استفاده می‌شود اگر به صفحه ایی
‫که قبلاً در آن بوده اید سر بزنید

64
00:07:28,000 --> 00:07:35,000
‫درخواستی را مجددا برای سرور نمی‌فرستد.

65
00:07:35,000 --> 00:07:39,000
‫مورد بعدی که می‌خوام بهتون نشون بدم، این است اگر این

66
00:07:39,000 --> 00:07:45,000
‫آدرس را کپی کنم و به سایت گوگل برم. اجازه بدید به سایت بازگردم

67
00:07:54,000 --> 00:07:58,000
‫همانطور که مشاهده می‌کنید صفحه New Event را بارگذاری کرده است.
‫خب، دقیقاً اینجا چه اتفاقی افتاد؟

68
00:07:58,000 --> 00:08:08,000
‫اگر به فیدلر نگاهی بیندازیم، خواهید دید که ما به ریشه صفحه درخواست فرستادیم
‫و صفحه index. html را برای ما بارگذاری کرد،

69
00:08:08,000 --> 00:08:14,000
‫خب این ng-view ما است. صفحه index. html بارگذاری شده است و همانطور
‫که مشاهده می‌کنید

70
00:08:14,000 --> 00:08:21,000
‫بلافاصله به صفحه New Event درخواست فرستاده شده است همچنین
‫دوباره به آن درخواست فرستاده است زیرا

71
00:08:21,000 --> 00:08:25,000
‫ما کل صفحه را مجدداً بارگذاری کردیم.

72
00:08:25,000 --> 00:08:32,000
‫و بلافاصله بعد از بارگذاری index. html آن تمپلیت بارگذاری شد
‫وقتی انگولار بوت استرپ شد

73
00:08:32,000 --> 00:08:39,000
‫متوجه شد که آدرس URL تغییر کرده و یک route دارد.

74
00:08:39,000 --> 00:08:46,000
‫خب اینها مقدمات ایجاد یک route بودند خب برنامه ما به نوعی
‫به قسمت هایی تقسیم شده است زیرا تنها routeی که

75
00:08:46,000 --> 00:08:51,000
‫ما تنظیم کردیم برای صفحه New Event است، اما در چند ویدئو بعدی
‫بقیه route‌ها را نیز تنظیم خواهیم کرد.

