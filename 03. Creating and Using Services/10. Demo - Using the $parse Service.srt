1
00:00:01,000 --> 00:00:06,000
‫سرویس $parse تا اندازه‌ای شبیه به سرویس $compile است
‫و توسط انگولار در زمان

2
00:00:06,000 --> 00:00:13,000
‫پردازش صفحه مورداستفاده قرار می‌گیرد. این سرویس یک عبارت را مورد
‫ارزیابی قرار میدهد و عبارت را به یک

3
00:00:13,000 --> 00:00:19,000
‫تابع تبدیل می‌کند که قادر به ارزیابی یک کانتکست داده شده می‌باشد.

4
00:00:19,000 --> 00:00:26,000
‫خب، اینجا مثال ساده را می‌بینید، این مثال استفاده از کانتکست را نشان نمی‌دهد،

5
00:00:26,000 --> 00:00:33,000
‫اما در اینجا یک عبارت خیلی ساده داریم، 1+2 ، دقت داشته باشید که از سرویس
‫$parse جهت تبدیل این عبارت به یک تابع استفاده می‌کنیم

6
00:00:33,000 --> 00:00:39,000
‫سپس این تابع را اجرا می‌کنیم و آن را در خروجی Log می‌کنیم.

7
00:00:39,000 --> 00:00:45,000
‫خب، اجازه دهید خروجی را در مرورگر ببینیم.

8
00:00:45,000 --> 00:00:52,000
‫اگر اکنون صفحه را ریفرش کنم، همانطور که مشاهده می‌کنید عدد 3 را
‫در خروجی داریم.

9
00:00:52,000 --> 00:01:00,000
‫بنابراین این عبارت ارزیابی شده است، وقتی تابع را فراخوانی کردیم
‫نتیجه 1+2 توسط $parse برگردانده می‌شود.

10
00:01:00,000 --> 00:01:06,000
‫اکنون اجازه دهید به یک مثال دیگر بپردازیم، اما پاس دادن به یک کانتکست.
‫بنابراین، در اینجا از $parse جهت parse کردن

11
00:01:06,000 --> 00:01:14,000
‫عبارت event. name آن استفاده میکنیم و آن را برابر با متغییر به نام getter
‫قرار داده ام. به یاد داشته باشید که در واقع یک تابع است.

12
00:01:14,000 --> 00:01:21,000
‫سپس، این دو context را ایجاد میکنم. یکی از آنها دارای یک شیء event
‫که name آن AngularJS Boot Camp است

13
00:01:21,000 --> 00:01:31,000
‫و دیگری مقدار name آن code camp می‌باشد.

14
00:01:31,000 --> 00:01:36,000
‫تابع getter را دو بار با پاس دادن دو context مختلف فراخوانی میکنم

15
00:01:36,000 --> 00:01:42,000
‫و آنها را در خروجی لاگ می‌کنم، دقت داشته باشید می‌خواهیم
‫getter را جهت نمایش عبارت

16
00:01:42,000 --> 00:01:48,000
‫event. name فراخوانی میکنیم و دو event متفاوت را پاس می‌دهیم.

17
00:01:48,000 --> 00:01:53,000
‫اجازه دهید ببینیم چه چیزی در خروجی لاگ می‌شود.

18
00:01:53,000 --> 00:02:00,000
‫خب، مقدار اولی یعنی AngularJS Boot Camp برگردانده می‌شود و همچنین دومی

19
00:02:00,000 --> 00:02:08,000
‫بنابراین، با پاس دادن یک context داخل یک تابع عبارت ارزیابی شده توسط $parse
‫برگردانده می‌شود

20
00:02:08,000 --> 00:02:18,000
‫همچنین تابع برگردانده شده توسط $parse می‌تواند دو پارامتر ورودی بگیرد.

21
00:02:18,000 --> 00:02:26,000
‫یک context همراه با یک context لوکال که در این حالت ما context1
‫و context2 را پاس داده ایم

22
00:02:26,000 --> 00:02:34,000
‫context1 نمایانگر یک context لوکال است و هر چیزی که در context1 است
‫نسبت به context2 دارای اولویت می‌باشد

23
00:02:34,000 --> 00:02:43,000
‫اگر تداخلی وجود داشته باشد. خب اگر این قسمت را لاگ کنم به یاد دارد
‫context2 مقدار name آن code camp است

24
00:02:43,000 --> 00:02:49,000
‫و context1 هم AngularJS Boot Camp می‌باشد.

25
00:02:49,000 --> 00:02:55,000
‫اگر صفحه را ریفرش کنیم مقدار AngularJS Boot Camp را دریافت می‌کنیم،
‫آخرین مورد.

26
00:02:55,000 --> 00:03:01,000
‫زیرا context1 مقدار context2 را بازنویسی می‌کند.

27
00:03:01,000 --> 00:03:09,000
‫مثال آخر، می‌خواهم نحوهٔ انتساب مقادیر را به context به شما نشان دهم.

28
00:03:09,000 --> 00:03:21,000
‫خب، به یاد دارید که این متغییر getter یک تابع است که توسط $parse
‫برگردانده شده است و دارای یک پراپرتی

29
00:03:21,000 --> 00:03:30,000
‫با نام assign است خب می‌خواهیم این مقدار setter یا این
‫getter. assign را مقداردهی کنیم

30
00:03:30,000 --> 00:03:37,000
‫خب آن را اجرا می‌کنیم که در واقع یک تابع است. بنابراین تابع setter را با

31
00:03:37,000 --> 00:03:43,000
‫context2 اجرا میکنم و مقدار Code Retreat را به آن پاس میدهم.

32
00:03:43,000 --> 00:03:51,000
‫context2 یک event که name آن code camp است و می‌خوام
‫اون رو به Code Retreat مقداردهی کنم.

33
00:03:51,000 --> 00:04:00,000
‫همچنین می‌خوام مقدار context2. event. name را لاگ کنم.
‫بنابراین، این مقدار را لاگ میکنم، ببخشید،

34
00:04:00,000 --> 00:04:11,000
‫این پراپرتی رو لاگ میکنم. خب اجازه دهید اون رو اجرا کنم.

35
00:04:11,000 --> 00:04:18,000
‫همانطور که مشاهده می‌کنید به Code Retreat مقداردهی شده است.
‫بنابراین می‌توانید از پراپرتی assign تابع برگشتی توسط $parse

36
00:04:18,000 --> 00:04:26,000
‫جهت مقداردهی به مقادیر contextی که پاس داده شده استفاده کنید
‫خب این کاری است که تابع $parse انجام میدهد.

37
00:04:26,000 --> 00:04:31,000
‫این کاری است که به طور معمول نباید انجام دهید. باید داخل یک

38
00:04:31,000 --> 00:04:36,000
‫دایرکتیو اینکار را انجام دهید. دقیقاً همانند سرویس $compile

