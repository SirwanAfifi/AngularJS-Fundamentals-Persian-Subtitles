1
00:00:02,000 --> 00:00:06,000
‫بسیار خب، برای اینکه بیشتر با ایجاد سرویس‌ها آشنا شوید، یک سرویس

2
00:00:06,000 --> 00:00:12,000
‫دیگر را که دارای یک متد باشد را ایجاد میکنیم.

3
00:00:12,000 --> 00:00:19,000
‫و این متد کار مفیدی را برای ما انجام میدهد. خب، یک صفحه جدید ایجاد می‌کنیم.

4
00:00:19,000 --> 00:00:27,000
‫یک صفحه با عنوان EditProfile ایجاد میکنیم که کاربران می‌توانند به سایت وارد شوند
‫و پروفایل خود را ایجاد کنند.

5
00:00:27,000 --> 00:00:36,000
‫به این صورت. خب تمام اینها HTML و CSS با مقداری بایندینگ انگولار می‌باشد.

6
00:00:36,000 --> 00:00:46,000
‫بنابراین، برای مدل user تعدادی انقیاد داده را داریم و بیشتر به آدرس ایمیل کاربر
‫توجه می‌کنیم.

7
00:00:46,000 --> 00:00:50,000
‫کاری که قرار است در داخل سرویس انجام دهیم.

8
00:00:50,000 --> 00:00:59,000
‫سپس دقت کنید که از طریق دایرکتیو controller به کنترلر EditProfileController متصل می‌شویم.

9
00:00:59,000 --> 00:01:05,000
‫کنترلر هنوز ایجاد نشده است در نتیجه اجازه دهید آن را ایجاد کنیم.

10
00:01:05,000 --> 00:01:13,000
‫خب، یک EditProfileController به این صورت داریم.

11
00:01:13,000 --> 00:01:18,000
‫خب، در اینجا یک EditProfileController ساده را داریم. که یک مدل user داخل خود دارد.

12
00:01:18,000 --> 00:01:24,000
‫اگر به صفحه EditProfile برگردم تگ image را خواهیم دید

13
00:01:24,000 --> 00:01:29,000
‫که به یک تصویر ثابت با نام profile. jpg اشاره دارد.

14
00:01:29,000 --> 00:01:40,000
‫که در خروجی نیز به این صورت نمایش داده می‌شود.

15
00:01:40,000 --> 00:01:47,000
‫کاری که می‌خواهیم انجام دهیم جایگزین کردن این تصویر است.

16
00:01:47,000 --> 00:01:52,000
‫بنابراین، در داخل کنترلر EditProfileController

17
00:01:52,000 --> 00:02:01,000
‫یک تابع با نام getGravatarUrl ایجاد میکنم.

18
00:02:01,000 --> 00:02:09,000
‫این تابع یک آدرس ایمیل دریافت میکند و گراواتار مربوط به آن را برمیگرداند. این
‫آدرس در واقع یک آدرس عمومی است.

19
00:02:14,000 --> 00:02:24,000
‫این یک آدرس URL است، در نتیجه شما یک آدرس ایمیل هش شده و سپس
‫پسوند. jpg را لازم دارید.

20
00:02:24,000 --> 00:02:34,000
‫و اندازه تصویر که در اینجا 200 پیکسل است و همچنین یک rating
‫که می‌تواند rating تصاویر باشد مانند G, PG, PG13 و غیره.

21
00:02:34,000 --> 00:02:42,000
‫خب، این فرمت URL است که با MD5 ترکیب شده است. به علاوه،
‫قبل از هش کردن

22
00:02:42,000 --> 00:02:47,000
‫و برگرداندن درخواست داده شده،

23
00:02:47,000 --> 00:02:57,000
‫می بایست آدرس ایمیل صحیح باشد در غیر اینصورت چیزی را بر نمی‌گرداند.

24
00:02:57,000 --> 00:03:04,000
‫به هر حال، این تابع MD5 خیلی طولانی‌تر از چیزی است که می‌بینید.

25
00:03:04,000 --> 00:03:11,000
‫اما به این صورت آن را نمایش داده ایم.

26
00:03:11,000 --> 00:03:18,000
‫خب، چیزی دیگری لازم نیست فقط در نظر داشته باشید

27
00:03:18,000 --> 00:03:22,000
‫که یک URL از یک آدرس ایمیل Hash شده را می‌سازیم.

28
00:03:22,000 --> 00:03:33,000
‫اگر به صفحه EditProfile برگردیم به جای استفاده از تصویر استاتیک
‫از ویژگی

29
00:03:33,000 --> 00:03:40,000
‫ng-src استفاده می‌کنیم که به انگولار خواهد گفت سورس این تصویر
‫حاصل نتیجه

30
00:03:40,000 --> 00:03:47,000
‫این عبارت می‌باشد، که در واقع تابع (getGravatarUrl) درون کنترلری است که ایجاد کردیم،

31
00:03:47,000 --> 00:03:54,000
‫که مقدار ایمیل را از ورودی می‌گیرد.

32
00:03:54,000 --> 00:04:06,000
‫که همانطور که به خاطر دارید آدرس ایمیل در اینجا بایند شده است.

33
00:04:06,000 --> 00:04:12,000
‫بنابراین، در حین تایپ آدرس ایمیل، انگولار این عبارت را مجدداً ارزیابی می‌کند.

34
00:04:12,000 --> 00:04:20,000
‫خب، اجازه دهید آن را امتحان کنیم. اگر با Gravatar آشنا نیستید، یک سایت است
‫که می‌توانید در آنجا یک اکانت ایجاد کنید

35
00:04:20,000 --> 00:04:28,000
‫می توانید یک تصویر براساس آدرس ایملیتان برای خود مشخص کنید

36
00:04:28,000 --> 00:04:33,000
‫که بیشتر سایت‌ها از Gravatar پشتیبانی و استفاده می‌کنند.

37
00:04:33,000 --> 00:04:42,000
‫خب اکنون اگر صفحه را ریفرش کنیم، یک تصویر Gravatar عمومی را دریافت می‌کنیم.

38
00:04:42,000 --> 00:04:54,000
‫اگر این قسمت را inspect کنم، خواهید دید که ng-src و src تصویر اکنون به آدرس Gravatar اشاره میکنند.

39
00:04:54,000 --> 00:05:00,000
‫خب این همان چیزی است که توسط تابع درون کنترلر برگردانده می‌شود. حالا اگر
‫در اینجا یک آدرس ایمیل معتبر وارد کنم

40
00:05:00,000 --> 00:05:11,000
‫تصویر پروفایل خودم را دارم.

41
00:05:11,000 --> 00:05:18,000
‫این همان تصویری است که برای آدرس ایمیلم گذاشته بودم.

42
00:05:18,000 --> 00:05:24,000
‫خب، اکنون همانطور که می‌بینید به خوبی کار میکند، اما تمام کدها داخل کنترلر هستند درسته؟

43
00:05:24,000 --> 00:05:32,000
‫بنابراین، این کدها کنترلرمان را خیلی شلوغ می‌کند.

44
00:05:32,000 --> 00:05:41,000
‫در واقع نمایش تصویر Gravatar وظیفه کنترلر نیست، خب اجازه دهید آن را

45
00:05:41,000 --> 00:05:50,000
‫به داخل یک سرویس منتقل کنیم. بنابراین یک سرویس جدید با نام

46
00:05:50,000 --> 00:05:56,000
‫GravatarUrlBuilder ایجاد میکنم.

47
00:05:56,000 --> 00:06:07,000
‫در اینجا با فراخوانی متد factory یک سرویس جدید ایجاد میکنم.

48
00:06:07,000 --> 00:06:20,000
‫که یک شیء را برمیگرداند و دارای یک متد با نام

49
00:06:20,000 --> 00:06:31,000
‫buildGravatarUrl می‌باشد. خب کدها را داخل این متد قرار می‌دهم.

50
00:06:31,000 --> 00:06:35,000
‫این متد یک آدرس ایمیل دریافت میکند.

51
00:06:35,000 --> 00:06:48,000
‫اکنون متد buildGravatarUrl را داریم. که آدرس ایمیل را دریافت میکند و
‫خروجی موردنظر را باز میگرداند.

52
00:06:48,000 --> 00:06:55,000
‫همچنین لازم است این سرویس را داخل کنترلرمان تزریق کنیم.

53
00:06:55,000 --> 00:07:03,000
‫اکنون اگر صفحه را ریفرش کنم کاری انجام نمی‌دهد زیرا

54
00:07:03,000 --> 00:07:10,000
‫فراموش کردم که سرویس را به صفحه ام اضافه کنم.

55
00:07:10,000 --> 00:07:18,000
‫خب صفحه را ریفرش میکنم و همانطور که مشاهده میکنید تصویر Gravatar پیش فرض
‫نمایش داده می‌شود.

56
00:07:18,000 --> 00:07:25,000
‫و اگر یک آدرس ایمیل را وارد کنم تصویر نمایش داده می‌شود. اکنون کنترلر ما تمیزتر به نظر می‌رسد

57
00:07:25,000 --> 00:07:30,000
‫خب این چگونگی اهمیت سرویس‌های سفارشی را نشان میدهد.

