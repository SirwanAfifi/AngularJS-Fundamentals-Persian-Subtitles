1
00:00:00,500 --> 00:00:07,500
‫خب اکنون اجازه دهید به سرویس $compile نگاهی بیندازیم.
‫این سرویس به شدت توسط انگولار استفاده می‌شود

2
00:00:07,500 --> 00:00:13,500
‫و زمانیکه یک صفحه بارگذاری میشود مورد استفاده قرار میگیرد.
‫انگولار از سرویس $compile برای جستجو در صفحه و یافتن

3
00:00:13,500 --> 00:00:18,500
‫دایرکتیوها و فرآیند آنها استفاده میکند، اما شما می‌توانید همچنین
‫خودتان از این سرویس استفاده کنید.

4
00:00:18,500 --> 00:00:23,500
‫به طور معمول داخل یک دایرکتیو از آن استفاده خواهید کرد، اما از آنجاییکه
‫هنوز دایرکتیوها را توضیح نداده ایم،

5
00:00:23,500 --> 00:00:29,500
‫در داخل یک کنترلر نحوه استفاده از این سرویس را به شما خواهیم آموخت.

6
00:00:29,500 --> 00:00:37,500
‫خب برای مثال، یک کنترلر با نام CompileSampleController و یک
‫صفحه با نام CompileSample ایجاد کرده ام.

7
00:00:37,500 --> 00:00:45,500
‫خب، از این کدهای HTML استفاده می‌کنیم. خب این div
‫appendHere را داریم که در واقع یک تگ div خالی است.

8
00:00:45,500 --> 00:00:53,500
‫و این فیلدهای ورودی را داریم، یکی از آنها به name
‫بایند شده است و آن یکی به markup بایند شده است.

9
00:00:53,500 --> 00:01:00,500
‫و یک دکمه داریم که وقتی بر روی آن کلیک می‌شود، متد appendDivToElement
‫را فراخوانی میکند و markup را به آن پاس میدهد.

10
00:01:00,500 --> 00:01:10,500
‫خب، اجازه دهید داخل کنترلر بریم و یک متد با نام appendDivToElement ایجاد کنیم

11
00:01:10,500 --> 00:01:17,500
‫که قرار است توسط دکمه درون صفحه همراه با پارامتر markup فراخوانی شود
‫سپس همانطور که در اینجا مشاهده می‌کنید

12
00:01:17,500 --> 00:01:24,500
‫سرویس $compile را فراخوانی میکنیم و markup را به آن پاس می‌دهیم.

13
00:01:24,500 --> 00:01:28,500
‫خب، markup توسط متد کامپایل می‌شود،

14
00:01:28,500 --> 00:01:36,500
‫همانطور که مشاهده می‌کنید متد $compile یک تابع پیوندی را
‫برمیگرداند.

15
00:01:36,500 --> 00:01:43,500
‫خب، در واقع یک تابع را برمیگرداند سپس این تابع فراخوانی شده
‫و scope داخل تابع پاس داده می‌شود.

16
00:01:43,500 --> 00:01:51,500
‫بنابراین ما در markup را کامپایل می‌کنیم سپس به تگ

17
00:01:51,500 --> 00:02:00,500
‫appendHere اضافه می‌شود. بنابراین، angular. element در اینجا شبیه به
‫jQuery عمل می‌کند.

18
00:02:00,500 --> 00:02:06,500
‫بنابراین می‌توانید عناصر صفحه را با استفاده از selectorهای که در jQuery
‫استفاده می‌کنید پیدا کنید.

19
00:02:06,500 --> 00:02:14,500
‫خب، نتیجه را به آن عنصر اضافه می‌کنیم.

20
00:02:14,500 --> 00:02:21,500
‫اکنون اگر نگاهی به صفحه بیندازیم، فعلاً خالی است اجازه دهید صفحه را ریفرش کنیم.

21
00:02:21,500 --> 00:02:28,500
‫خب اینها فیلدهایی هستند که ایجاد کردیم. بنابراین، در اینجا اسمی را وارد میکنیم
‫به طور مثال John.

22
00:02:28,500 --> 00:02:39,500
‫و markup را h3 همراه با {{name} } قرار می‌دهم.

23
00:02:39,500 --> 00:02:49,500
‫خب این فیلد را به خاطر داشته باشید، فیلد اول به نام
‫بایند می‌شود.

24
00:02:49,500 --> 00:02:52,500
‫اکنون این markup قرار است به تابع درون کنترلرمان ارسال شود

25
00:02:52,500 --> 00:03:00,500
‫که قرار است سرویس $compile را فراخوانی کند. خب اگر بر روی
‫Append کلیک کنم، ببنید چه اتفاقی می‌افتد!

26
00:03:00,500 --> 00:03:17,500
‫نامی را که در فیلد اول وارد کردیم درون تگ h3 دریافت می‌کنیم. خب
‫اگر به جای h3 از button استفاده کنیم چطور

27
00:03:17,500 --> 00:03:22,500
‫اکنون یک دکمه را نمایش می‌دهد که متن درون آن name است.

28
00:03:22,500 --> 00:03:29,500
‫خب، در واقع عناصری را اینجا ایجاد کردیم و با استفاده از انگولار آنها
‫را کامپایل کردیم،

29
00:03:29,500 --> 00:03:34,500
‫خب name با عبارت John جایگزین می‌شود.

30
00:03:34,500 --> 00:03:39,500
‫اما دقت کنید که با یک رشته جایگزین نمی‌شود. این در واقع
‫مکانیزم بایندینگ است.

31
00:03:39,500 --> 00:03:48,500
‫خب می‌تونم هر چیزی را تایپ کنم.

32
00:03:48,500 --> 00:03:56,500
‫خب، به کد کنترلرمان برمیگردیم، markupی که داخل فیلد متنی وارد میکردیم
‫پاس داده میشود و سپس

33
00:03:56,500 --> 00:04:04,500
‫بعد از کامپایل به تگ appendHere اضافه می‌شود.

34
00:04:04,500 --> 00:04:11,500
‫خب این به نوعی ایده $compile است که مقداری کد HTML را میگیرد
‫سپس آن را کامپایل میکند

35
00:04:11,500 --> 00:04:18,500
‫و هر دایرکتیو و یا بایندینگی داخل HTML را پردازش کرده و یک تابع برای
‫آن ایجاد میکند و بعد از فراخوانی

36
00:04:18,500 --> 00:04:23,500
‫یک scope را با HTML تولید شده به اختصاص میدهد.

